

// PURPOSE: represents a moving ball
class Ball {

    // Coordinates of a ball
    field int x1, y1, x2, y2;
    
    // Direction of ball movement
    // TODO: maybe enumeration like with directions
    field int dx, dy;

    // Radius of a ball
    static int RADIUS;

    // Speed of a ball
    static int SPEED;


    // PURPOSE: creates a new ball object with given coordinates
    // CHANGES: memory
    constructor Ball new(int Ax, int Ay) {

        do init();

        do setPosition(Ax, Ay);

        let dx = SPEED;
        let dy = SPEED;

        do draw();
        
        return this;
    }


    // PURPOSE: initializes constants for a ball
    // CHANGES: constants
    method void init() {

        let RADIUS = 3;
        let SPEED = 1;

        return;
    }


    // PURPOSE: getters
    // RETURNS: fields of current object
    method int getX1() { return x1; }
    method int getY1() { return y1; }
    method int getX2() { return x2; }
    method int getY2() { return y2; }
    method int getDX() { return dx; }
    method int getDY() { return dy; }


    // PURPOSE: frees memory from the ball
    // CHANGES: memory
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }


    // PURPOSE: draws ball at the current position on the screen
    // CHANGES: screen
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x1, y1, x2, y2);
        return;
    }


    // PURPOSE: erases ball at the current position from the screen
    // CHANGES: screen
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x1, y1, x2, y2);
        return;
    }


    // PURPOSE: changes ball movement direction if bounced from a brick or platform
    // CHANGES: dy, dx
    method void topBounce() {
        let dy = -SPEED;
        return;
    }

    method void bottomBounce() {
        let dy = SPEED;
        return;
    }

    method void leftBounce() {
        let dx = -SPEED;
        return;
    }

    method void rightBounce() {
        let dx = SPEED;
        return;
    }


    // PURPOSE: sets position of the ball of the screen
    // CHANGES: x1, y1, x2, y2
    method void setPosition(int Ax, int Ay){
        let x1 = Ax;
        let x2 = Ax + RADIUS;

        let y1 = Ay;
        let y2 = Ay + RADIUS;
        return;
    }


    // PURPOSE: moves ball and displays it on the screen
    // CHANGES: x y
    method void move() {
        
        do erase();

        let x1 = x1 + dx;
        let y1 = y1 + dy;

        let x2 = x2 + dx;
        let y2 = y2 + dy;

        do draw();

        return;
    }


} // class